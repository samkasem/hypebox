{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\hypebox\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const classes = useStyles();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === null) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, currentId ? 'Edit' : 'Create', \" A Post\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","classes","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["D:/Projects/hypebox/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useStyles from './styles'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const classes = useStyles()\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  )\r\n  const [postData, setPostData] = useState({\r\n    creator: '',\r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    selectedFile: '',\r\n  })\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (post) setPostData(post)\r\n  }, [post])\r\n\r\n  const clear = () => {\r\n    setCurrentId(null)\r\n    setPostData({\r\n      title: '',\r\n      message: '',\r\n      tags: '',\r\n      selectedFile: '',\r\n    })\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (currentId === null) {\r\n      dispatch(createPost(postData))\r\n      clear()\r\n    } else {\r\n      dispatch(updatePost(currentId, postData))\r\n      clear()\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete='off'\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant='h6'>\r\n          {currentId ? 'Edit' : 'Create'} A Post\r\n        </Typography>\r\n        <TextField\r\n          name='title'\r\n          variant='outlined'\r\n          label='Title'\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name='message'\r\n          variant='outlined'\r\n          label='Message'\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name='tags'\r\n          variant='outlined'\r\n          label='Tags (coma separated)'\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(',') })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type='file'\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant='contained'\r\n          color='primary'\r\n          size='large'\r\n          type='submit'\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          size='small'\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Form\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}